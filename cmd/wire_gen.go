// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/go-leo/app-layout/domain"
	"github.com/go-leo/app-layout/infra"
	"github.com/go-leo/app-layout/service"
	"github.com/go-leo/app-layout/ui"
	"github.com/go-leo/leo/v3/serverx/grpcserverx"
	"github.com/go-leo/leo/v3/serverx/httpserverx"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitGrpcServer(ctx context.Context) (*grpcserverx.Server, error) {
	userService := ui.NewUserService()
	v := grpcTransportOptions(ctx)
	v2 := grpcServerOptions()
	v3 := grpcServerxOptions(ctx, v2)
	server := grpcServer(ctx, userService, v, v3)
	return server, nil
}

func InitHttpServer(ctx context.Context) (*httpserverx.Server, error) {
	userService := ui.NewUserService()
	v := muxMiddlewares(ctx)
	v2 := httpTransportOptions(ctx)
	router := newRouter(ctx, userService, v, v2)
	v3 := httpServerOptions(ctx)
	server := httpServer(ctx, router, v3)
	return server, nil
}

// wire.go:

var Provider = wire.NewSet(domain.Provider, infra.Provider, service.Provider, ui.Provider, muxMiddlewares,
	newRouter,
	httpTransportOptions,
	httpServerOptions,
	httpServer,
	grpcServerOptions,
	grpcTransportOptions,
	grpcServerxOptions,
	grpcServer,
)
