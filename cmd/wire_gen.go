// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/go-leo/app-layout/domain"
	"github.com/go-leo/app-layout/infra"
	"github.com/go-leo/app-layout/service"
	"github.com/go-leo/app-layout/ui"
	"github.com/go-leo/leo/v3/serverx/grpcserverx"
	"github.com/go-leo/leo/v3/serverx/httpserverx"
	"github.com/google/wire"
	"github.com/gorilla/mux"
)

// Injectors from wire.go:

func InitGrpcServer(ctx context.Context) (*grpcserverx.Server, error) {
	server := NewGrpcServer()
	return server, nil
}

func InitHttpServer(ctx context.Context) (*httpserverx.Server, error) {
	v := muxMiddlewares()
	router := newRouter(v...)
	server := NewHttpServer(router)
	return server, nil
}

// wire.go:

var Provider = wire.NewSet(domain.Provider, infra.Provider, service.Provider, ui.Provider, muxMiddlewares,
	newRouter,
	NewHttpServer,
	NewGrpcServer,
)

func NewGrpcServer() *grpcserverx.Server {
	return grpcserverx.NewServer(grpcServerOptions()...)
}

func NewHttpServer(router *mux.Router) *httpserverx.Server {
	return httpserverx.NewServer(router, httpServerOptions()...)
}
